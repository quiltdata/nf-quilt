/*
 * Copyright 2021-2022, Seqera Labs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    // Apply the groovy plugin to add support for Groovy
    id 'groovy'
    id 'idea'
    id 'se.patrikerdes.use-latest-versions' version '0.2.18'
    id 'com.github.ben-manes.versions' version '0.51.0'
    id 'jacoco'
}

useLatestVersions {
    // A blacklist of dependencies to update, in the format of group:name
    updateBlacklist = [
        'com.quiltdata:quiltcore',
        'org.codehaus.groovy:groovy',
        'org.codehaus.groovy:groovy-nio',
        'org.codehaus.groovy:groovy-test',
        'org.spockframework:spock-core',
        'org.spockframework:spock-junit4',
    ]
}

group = 'io.nextflow'
// DO NOT SET THE VERSION HERE
// THE VERSION FOR PLUGINS IS DEFINED IN THE `/resources/META-INF/MANIFEST.NF` file
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

idea {
    module.inheritOutputDirs = true
}

repositories {
    mavenCentral()
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://s3-eu-west-1.amazonaws.com/maven.seqera.io/releases' }
    maven { url = 'https://s3-eu-west-1.amazonaws.com/maven.seqera.io/snapshots' }
}

configurations {
    // see https://docs.gradle.org/4.1/userguide/dependency_management.html#sub:exclude_transitive_dependencies
    runtimeClasspath.exclude group: 'org.slf4j', module: 'slf4j-api'
}

sourceSets {
    main.java.srcDirs = []
    main.groovy.srcDirs = ['src/main']
    main.resources.srcDirs = ['src/resources']
    test.groovy.srcDirs = ['src/test']
    test.java.srcDirs = []
    test.resources.srcDirs = ['src/testResources']
}

ext {
    nextflowVersion = rootProject.file('VERSION').text.trim()
}

dependencies {
    // quiltcore
    implementation 'com.quiltdata:quiltcore:0.1.6'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    compileOnly "io.nextflow:nextflow:$nextflowVersion"
    compileOnly 'org.slf4j:slf4j-api:2.1.0-alpha1'
    compileOnly 'org.pf4j:pf4j:3.13.0'
    // add here plugins depepencies
    compileOnly 'org.slf4j:slf4j-simple:2.1.0-alpha1'
    compileOnly 'black.ninia:jep:4.2.2'
    runtime 'black.ninia:jep:4.2.2'
    runtimeOnly 'org.junit.platform:junit-platform-launcher:1.11.4'
    implementation 'commons-io:commons-io:2.18.0'
    implementation 'black.ninia:jep:4.2.2'
    testImplementation 'black.ninia:jep:4.2.2'
    //testImplementation(testFixtures('black.ninia:jep:4.0.3'))

    // test configuration
    testImplementation 'org.codehaus.groovy:groovy:3.0.23'
    testImplementation 'org.codehaus.groovy:groovy-nio:3.0.23'
    testImplementation "io.nextflow:nextflow:$nextflowVersion"
    testImplementation('org.codehaus.groovy:groovy-test:3.0.23') { exclude group: 'org.codehaus.groovy' }
    testImplementation('cglib:cglib-nodep:3.3.0')
    testImplementation('org.objenesis:objenesis:3.4')
    testImplementation('org.spockframework:spock-core:2.3-groovy-3.0') { exclude group: 'org.codehaus.groovy'; exclude group: 'net.bytebuddy' }
    testImplementation('org.spockframework:spock-junit4:2.3-groovy-3.0') { exclude group: 'org.codehaus.groovy'; exclude group: 'net.bytebuddy' }
    testImplementation('com.google.jimfs:jimfs:1.3.0')

    testImplementation(testFixtures("io.nextflow:nextflow:$nextflowVersion"))
    testImplementation(testFixtures("io.nextflow:nf-commons:$nextflowVersion"))

    // see https://docs.gradle.org/4.1/userguide/dependency_management.html#sec:module_replacement
    modules {
        module('commons-logging:commons-logging') { replacedBy('org.slf4j:jcl-over-slf4j') }
    }
}

// use JUnit 5 platform
test {
    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport // tests are required to run before generating the report
    violationRules {
        rule {
            limit {
                minimum = 0.7
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}
